import React__default, { useState, createElement, useImperativeHandle, Fragment } from 'react';
import usePortal from 'react-useportal';
import { useLockBodyScroll } from 'react-use';
import styled from 'styled-components';

var useModal = function useModal(initialStatus) {
  if (initialStatus === void 0) {
    initialStatus = false;
  }

  var _useState = useState(initialStatus),
      status = _useState[0],
      setStatus = _useState[1];

  return {
    modalStatus: status,
    closeModal: function closeModal() {
      return setStatus(false);
    },
    openModal: function openModal() {
      return setStatus(true);
    }
  };
};

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

var _circle;

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function SvgCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    className: "circle_svg__hamburger-toggle__circle",
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _circle || (_circle = /*#__PURE__*/createElement("circle", {
    cx: 16,
    cy: 16,
    r: 16
  })));
}

var _templateObject, _templateObject2, _templateObject3, _templateObject4;
var Content = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  opacity: ", ";\n  overflow: auto;\n  padding: 50px 10px;\n  pointer-events: ", ";\n  position: fixed;\n  top: 0;\n  transform: ", ";\n  transition: opacity 0.5s, transform 0.3s;\n  width: 100%;\n  z-index: 1000;\n"])), function (_ref) {
  var status = _ref.status;
  return status ? 1 : 0;
}, function (_ref2) {
  var status = _ref2.status;
  return status ? 'auto' : 'none';
}, function (_ref3) {
  var status = _ref3.status;
  return status ? 'none' : 'translateY(20px)';
});
var IconWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose(["\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: ", ";\n"])), function (_ref4) {
  var status = _ref4.status;
  return status ? 999 : -1;
});
var IconPositionWrapper = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose(["\n  pointer-events: none;\n  position: absolute;\n  transform: translate(-50%, -50%);\n"])));
var CircleSVG = styled(function (_ref5) {
  var props = _objectWithoutPropertiesLoose(_ref5, ["bgColor", "status"]);

  return React__default.createElement(SvgCircle, Object.assign({}, props));
})(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose(["\n  fill: ", ";\n  height: 60px;\n  transform: ", ";\n  transform-origin: center;\n  transition: transform 0.5s;\n  width: 60px;\n"])), function (_ref6) {
  var bgColor = _ref6.bgColor;
  return bgColor;
}, function (_ref7) {
  var status = _ref7.status;
  return status ? 'scale(100) translate3d(1%, 1%, 0)' : 'scale(0)';
});

var ReactCircleModal = React__default.forwardRef(function (_ref, ref) {
  var backgroundColor = _ref.backgroundColor,
      children = _ref.children,
      _ref$offsetX = _ref.offsetX,
      offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,
      _ref$offsetY = _ref.offsetY,
      offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY,
      toogleComponent = _ref.toogleComponent;

  var _usePortal = usePortal(),
      Portal = _usePortal.Portal;

  var _useModal = useModal(false),
      modalStatus = _useModal.modalStatus,
      closeModal = _useModal.closeModal,
      openModal = _useModal.openModal;

  var _useState = useState(modalStatus),
      wrapperStatus = _useState[0],
      setWrapperStatus = _useState[1];

  var _useState2 = useState({
    left: 0,
    top: 0
  }),
      positions = _useState2[0],
      setPositions = _useState2[1];

  useLockBodyScroll(modalStatus);
  useImperativeHandle(ref, function () {
    return {
      menuStatus: modalStatus,
      closeMenu: function closeMenu() {
        setTimeout(function () {
          return setWrapperStatus(false);
        }, 500);
        closeModal();
      },
      openMenu: function openMenu() {
        setWrapperStatus(true);
        openModal();
      }
    };
  });
  return React__default.createElement(Fragment, null, toogleComponent(function (event) {
    setPositions({
      left: event.clientX,
      top: event.clientY
    });
    openModal();
    setWrapperStatus(true);
  }, modalStatus), React__default.createElement(Portal, null, React__default.createElement(IconWrapper, {
    status: wrapperStatus
  }, React__default.createElement(IconPositionWrapper, {
    style: {
      top: positions.top + offsetY + "px",
      left: positions.left + offsetX + "px"
    }
  }, React__default.createElement(CircleSVG, {
    bgColor: backgroundColor,
    status: modalStatus
  }))), React__default.createElement(Content, {
    status: modalStatus
  }, children(function () {
    setTimeout(function () {
      return setWrapperStatus(false);
    }, 500);
    closeModal();
  }))));
});

export default ReactCircleModal;
export { ReactCircleModal };
//# sourceMappingURL=index.modern.js.map
