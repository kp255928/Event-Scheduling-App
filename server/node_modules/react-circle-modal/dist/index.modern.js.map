{"version":3,"file":"index.modern.js","sources":["../src/hooks/useModal.tsx","../src/style.tsx","../src/index.tsx"],"sourcesContent":["import { useState } from 'react'\n\nconst useModal = (initialStatus = false) => {\n  const [status, setStatus] = useState(initialStatus)\n\n  return {\n    modalStatus: status,\n    closeModal: () => setStatus(false),\n    openModal: () => setStatus(true)\n  }\n}\n\nexport default useModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ReactComponent as Circle } from './circle.svg'\n\ninterface ModalStatus {\n  status: boolean\n}\n\ninterface ModalBgColor {\n  bgColor: string\n}\n\nexport const Content = styled.div<ModalStatus>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  opacity: ${({ status }) => (status ? 1 : 0)};\n  overflow: auto;\n  padding: 50px 10px;\n  pointer-events: ${({ status }) => (status ? 'auto' : 'none')};\n  position: fixed;\n  top: 0;\n  transform: ${({ status }) => (status ? 'none' : 'translateY(20px)')};\n  transition: opacity 0.5s, transform 0.3s;\n  width: 100%;\n  z-index: 1000;\n`\n\nexport const IconWrapper = styled.div<ModalStatus>`\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: ${({ status }) => (status ? 999 : -1)};\n`\n\nexport const IconPositionWrapper = styled.div`\n  pointer-events: none;\n  position: absolute;\n  transform: translate(-50%, -50%);\n`\n\nexport const CircleSVG = styled(\n  ({ bgColor, status, ...props }: ModalStatus & ModalBgColor) => (\n    <Circle {...props} />\n  )\n)`\n  fill: ${({ bgColor }) => bgColor};\n  height: 60px;\n  transform: ${({ status }) =>\n    status ? 'scale(100) translate3d(1%, 1%, 0)' : 'scale(0)'};\n  transform-origin: center;\n  transition: transform 0.5s;\n  width: 60px;\n`\n","import React, { Fragment, useImperativeHandle, useState } from 'react'\nimport usePortal from 'react-useportal'\nimport { useLockBodyScroll } from 'react-use'\nimport useModal from './hooks/useModal'\nimport { CircleSVG, Content, IconWrapper, IconPositionWrapper } from './style'\n\ntype RefContent = {\n  menuStatus: boolean\n  closeMenu: () => void\n  openMenu: () => void\n}\n\ninterface Props {\n  backgroundColor: string\n  children: (\n    onClick: (event: React.MouseEvent) => void\n  ) => React.ReactNode\n  toogleComponent: (\n    onClick: (event: React.MouseEvent) => void,\n    status: boolean\n  ) => React.ReactNode\n  offsetX?: number\n  offsetY?: number\n}\n\nexport const ReactCircleModal = React.forwardRef<RefContent | null, Props>(\n  (\n    {\n      backgroundColor,\n      children,\n      offsetX = 0,\n      offsetY = 0,\n      toogleComponent,\n    },\n    ref\n  ) => {\n    const { Portal } = usePortal()\n    const { modalStatus, closeModal, openModal } = useModal(false)\n    const [wrapperStatus, setWrapperStatus] = useState(modalStatus)\n    const [positions, setPositions] = useState({ left: 0, top: 0 })\n\n    useLockBodyScroll(modalStatus)\n    useImperativeHandle(ref, () => ({\n      menuStatus: modalStatus,\n      closeMenu: () => {\n        setTimeout(() => setWrapperStatus(false), 500)\n        closeModal()\n      },\n      openMenu: () => {\n        setWrapperStatus(true)\n        openModal()\n      }\n    }))\n\n    return (\n      <Fragment>\n        {toogleComponent((event) => {\n          setPositions({ left: event.clientX, top: event.clientY })\n          openModal()\n          setWrapperStatus(true)\n        }, modalStatus)}\n        <Portal>\n          <IconWrapper status={wrapperStatus}>\n            <IconPositionWrapper\n              style={{\n                top: `${positions.top + offsetY}px`,\n                left: `${positions.left + offsetX}px`\n              }}\n            >\n              <CircleSVG bgColor={backgroundColor} status={modalStatus} />\n            </IconPositionWrapper>\n          </IconWrapper>\n          <Content status={modalStatus}>\n            {children(() => {\n              setTimeout(() => setWrapperStatus(false), 500)\n              closeModal()\n            })}\n          </Content>\n        </Portal>\n      </Fragment>\n    )\n  }\n)\n\nexport default ReactCircleModal\n"],"names":["useModal","initialStatus","useState","status","setStatus","modalStatus","closeModal","openModal","Content","styled","div","IconWrapper","IconPositionWrapper","CircleSVG","props","React","Circle","bgColor","ReactCircleModal","forwardRef","ref","backgroundColor","children","offsetX","offsetY","toogleComponent","usePortal","Portal","wrapperStatus","setWrapperStatus","left","top","positions","setPositions","useLockBodyScroll","useImperativeHandle","menuStatus","closeMenu","setTimeout","openMenu","Fragment","event","clientX","clientY","style"],"mappings":"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"}