[{"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/index.js":"1","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/App.js":"2","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/NavBar.js":"3","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/LogIn.js":"4","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Search.js":"5","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Home.js":"6","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Invite.js":"7","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/SignUp.js":"8","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/SearchBar.js":"9","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/LoginControl.js":"10"},{"size":485,"mtime":1622800126040,"results":"11","hashOfConfig":"12"},{"size":1649,"mtime":1622800126035,"results":"13","hashOfConfig":"12"},{"size":2798,"mtime":1622805364655,"results":"14","hashOfConfig":"12"},{"size":3731,"mtime":1622800126039,"results":"15","hashOfConfig":"12"},{"size":211,"mtime":1622800126039,"results":"16","hashOfConfig":"12"},{"size":6806,"mtime":1622800126038,"results":"17","hashOfConfig":"12"},{"size":9184,"mtime":1622800126039,"results":"18","hashOfConfig":"12"},{"size":2192,"mtime":1622800126040,"results":"19","hashOfConfig":"12"},{"size":3051,"mtime":1622804451065,"results":"20","hashOfConfig":"12"},{"size":1227,"mtime":1622800126036,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1m4u5x1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"47","usedDeprecatedRules":"24"},"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/index.js",[],["48","49"],"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/App.js",[],"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/NavBar.js",["50","51","52","53"],"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/LogIn.js",["54","55","56"],"import React, {setState, useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport '../index.css';\nimport logincontrol from \"../LoginControl\";\nimport Axios from \"axios\";\nimport '../App.js'\nconst Login = () => {\n    useEffect(() => {\n        document.title = 'Log In';\n    });\n    const [data, setData] = useState(null);\n    const [username, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [logInStatus, setlogInStatus] = useState('');\n    \n    // const [isLoggedIn, setLoggedIn] = useState(false);\n    const user = [password,username]\n    \n    function read(user){\n        let returned = checkRegister(user);\n        returned.then(function(result) {\n            setlogInStatus(result.data.message);\n         });\n    }\n\n    const history = useHistory();\n\n    const getUser = () => {\n        Axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:9000/users/user\",\n        }).then((res) => {\n            setData(res.data);\n        });\n      };\n      \n     function checkRegister(user) {\n        const user_object = {\n            username: user[1],\n            password: user[0]\n        }\n        console.log(user_object)\n        var ok;\n            return Axios({\n                method: \"POST\",\n                data: user_object,\n                withCredentials: true,\n                url: \"http://localhost:9000/users/login\",\n              }); //.then((res) => {\n               // //this.username = res.username;\n              //  return res.data.message;\n              //});\n    }\n\n    const handleButton = (e) => {\n        read(user);\n        getUser()\n        e.preventDefault();\n        \n        console.log(logInStatus + \"ok\")\n        //logincontrol.username = data.username; //set login control username\n        // history.push('/');\n     }\n     function update(logInStatus){\n         console.log(logInStatus)\n         if(logInStatus === \"Successfully Authenticated\"){\n            console.log(data.username)\n            logincontrol.username = data.username;\n            console.log(logincontrol.username)\n            logincontrol.login();\n            // history.push('/');\n         }\n     }\n    return(\n        \n        <div className=\"login\">\n             {/* <div>\n        <h1>Get User after logged in</h1>\n        <button onClick={getUser}>Submit</button>\n        {data ? <h1>Welcome Back {data.username}</h1> : null}\n      </div> */}\n            <div className=\"userform\">\n            <h2 className=\"pagename\">Log in</h2>\n            <form>\n                {/* <label>Username:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ username }\n                    onChange={ (e) => setName(e.target.value) }\n                    placeholder=\"Username\"\n                />\n                {/* <label>Password:</label> */}\n                <input\n                    type=\"password\"\n                    required\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }\n                    placeholder=\"Password\"\n                />\n                <button onClick={handleButton}>Log In</button>\n                <h1>{logInStatus} </h1>\n                <h1>{update(logInStatus)} </h1>\n            </form>\n            </div>\n            <div className=\"accountaction\">\n                <label className=\"accountmessage\">Don't have an acco unt?</label>\n                <div className=\"accountlinks\">\n                    <Link to=\"/signup\" className=\"link\">Sign up</Link>\n                </div>\n                \n            </div>\n           \n        </div>\n    );\n}\nexport default Login;","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Search.js",[],"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Home.js",["57","58","59","60","61"],"import Axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport { Component } from 'react';\n//import { update } from '../../../server/datamodel/user';\nimport '../index.css';\nimport logincontrol from \"../LoginControl\";\n\nconst Home = () => {\n    useEffect(() => {\n        document.title = 'Home';\n    });\n    //logincontrol.login();\n\n    const [events, setEvents] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [userEvent, setUserEvent] = useState([]); //get user's event from backend\n    const [isConflict,update_isConflict] = useState('');\n    const [displayConflict,update_displayConflict] = useState('');\n    //HOPEFULLY get sth like this below\n    // const [userEvent, setUserEvent] = useState([\n    //     {title: 'Git repository organization due', date:'May 31', discription:'Git repository organization due', id: 1},\n    //     {title: 'Project source code due', date:'June 2', discription:'Project source code due', id: 2},\n    //     {title: 'Project Final Report due', date:'June 4', discription:'Project Final Report due', id: 3},\n    //     {title: 'End-of-quarter LA feedback survey due', date:'June 4', discription:'End-of-quarter LA feedback survey due', id: 4}\n\n    // ]);\n    // logincontrol.login();\n    const handleSubmit = (e) => {\n        //backend function\n        //check conflict:\n        //Date format is YYYY-MM-DD\n        //Time format is HH:MM\n        console.log(time)\n        console.log(date)\n        const event_object = {\n            username: logincontrol.username,\n            eventname: events,\n            sdate:date,\n            stime:time\n        }\n        read_conflict(event_object);\n        e.preventDefault();\n        \n\n    }\n    const handleB = (e) => {\n        //backend function\n        //check conflict:\n        //Date format is YYYY-MM-DD\n        //Time format is HH:MM\n        display_events()\n    }\n    function display_events(){\n        return Axios({\n            method: \"POST\",\n            data: {\n                username:logincontrol.username\n            },\n            url : \"http://localhost:9000/events/display_event_object\",\n            \n        }).then((res) => {\n            console.log(res.data)\n            setUserEvent(res.data)\n            return res.data;         \n        });\n    }\n    function conflict_check(event_object){\n        return Axios({\n            method: \"POST\",\n            data: event_object,\n            withCredentials: true,\n            url: \"http://localhost:9000/events/checkconflict\",\n          });\n\n    }\n    function read_conflict(event_object){\n        let returned = conflict_check(event_object);\n        returned.then(function(result) {\n            console.log(result.data.message)\n            if(result.data.message == \"Conflict detected. Please change your event date/time\"){\n                update_isConflict(result.data.message)\n            }else{\n                update_isConflict(\" \")\n                add_event2();\n            }\n         });\n    }\n    function add_event2(event_object){\n        let returned = add_event(event_object);\n        returned.then(function(result) {\n            console.log(\"Your event is added to the scheduler!\")\n            update_isConflict(\"Your event is added to the scheduler!\")\n         });\n    }\n    function add_event(){\n        const event_object = {\n            username: logincontrol.username,\n            eventname: events,\n            date:date,\n            time:time\n        }\n        return Axios({\n            method: \"POST\",\n            data: event_object,\n            withCredentials: true,\n            url: \"http://localhost:9000/events/add\",\n          });\n\n    }\n    function update(isConflict){\n        if(isConflict == \"Conflict detected. Please change your event date/time\"){\n            update_displayConflict(\"Time Conflict detected. Please change your event date/time\");\n        }\n\n    }\n    return(\n        // <div className=\"home\">\n        //     <h2 className=\"home-message\">{message}</h2>\n        //     {/* <h2 className=\"home-message\">and here are some upcoming events</h2> */}\n        //     {events.map((event) =>(\n        //         <div className=\"event-preview\" key={event.id}>\n        //             <h2>{ event.title }</h2>\n        //             <p>date: { event.date }</p>\n        //         </div>\n        //     ))}\n        // </div>\n        <div className=\"home\">\n            {logincontrol.isLoggedIn()?\n                <div>\n                    <div className=\"message\">\n                        <h2>Welcome {logincontrol.getUsername()}</h2>\n                    </div>\n                    <div className=\"create\">\n                    <form>\n                        <label>Create Event</label>\n                        <input \n                            type=\"text\"\n                            value = {events}\n                            onChange={ (e) => setEvents(e.target.value)}\n                            placeholder=\"Enter new event\" \n                        />\n                        <label>Date</label>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                        <label>Time</label>\n                        <input\n                            type=\"time\"\n                            value={time}\n                            onChange={(e) => setTime(e.target.value)}\n                        />\n                        <button onClick={handleSubmit}>Add Event</button>\n                        {/*<h1>{ update(isConflict) }</h1>*/}\n                        <h1>{ isConflict }</h1>\n                    </form>\n                    </div>\n                    <button className=\"show-button\" onClick={handleB}>Reload events</button>\n                    {userEvent.length === 0?\n                        <div className=\"message\">\n                            <h2>You have no upcoming event, check back again</h2>\n                        </div>\n                    :\n                        <div className=\"display\">\n                        {userEvent.map((event) =>(\n                            <div className=\"event-preview\" key={event.id}>\n                                <h2>{ event.eventname }</h2>\n                                <p>date: { event.date }</p>\n                                <p>Time: { event.time }</p>\n                                \n                            </div>\n                        ))}\n                        </div>\n                    }\n                </div>\n            :\n                <div className=\"message\">\n                    <h2>Please login first</h2>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Home;","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/Invite.js",["62","63","64","65"],"import React, { useEffect, useState, Fragment } from 'react';\nimport '../index.css';\nimport axios from \"axios\";\nimport logincontrol from \"../LoginControl\";\nimport { useHistory} from \"react-router-dom\";\n//var socket = io();\n\nconst Invite = () => {\n    useEffect(() => {\n        document.title = 'Invitation';\n    });\n    const [inviteUser, setInviteUser] = useState('');\n    const [event, setEvent] = useState('');\n    const [requestEvent, setRequestEvent] = useState('');\n    const [invitestat, setinvitestat] = useState('');\n    const [is_false, set_is_false] = useState('');\n    const [is_ok, set_ok] = useState('');\n    const [requestString, setRS] = useState('');\n    const curr_user = logincontrol.getUsername();\n    console.log(curr_user);\n    const history = useHistory();\n\n    // temp here\n    // logincontrol.login()\n\n    const handleAccept = (e) => {\n        accept_event_Invitation(curr_user);\n        e.preventDefault();\n        setRS(true);\n    };\n\n    const handleReject = (e) => {\n        deny_event_Invitation(curr_user);\n        e.preventDefault();\n        setRS(true);\n    };\n\n    const handleButton = (e) => {\n        if (inviteUser !== '' && event !== '') {\n            e.preventDefault();\n            console.log(curr_user + \"noes\")\n            display_event_by_user(curr_user,event)\n\n            if(is_ok == true){\n                invite_user(inviteUser, curr_user, event);\n                setinvitestat(\"Invitation successful\");\n            }\n            \n            //history.push('/');\n        }\n    }\n    function check_if_being_requested(current_user){\n        const usr = {\n            \"username\": current_user\n        }\n        let returned = check_request(usr);\n        returned.then(function(result) {\n            if(result.event!=null){\n                console.log(result.event)\n                console.log(result.sender)\n                set_is_false(true);\n                setRequestEvent(result.event);\n            }else{\n                set_is_false(false);\n            }\n    \n         });\n    \n        \n        return is_false;\n        // return true;\n    \n    }\n    function display_event_by_user(curr_user,event){\n        let returned = check(curr_user);\n            returned.then(function(result) {\n                var n = result.includes(event);\n                console.log(n)\n                if(n){\n                    set_ok(true);\n                }\n    \n             });\n    }\n    function get_request_received_from(curr_user){\n        const obj = {\n            username:curr_user\n        }\n        return axios({\n            method: \"POST\",\n            data: obj,\n            url : \"http://localhost:9000/users/receivedfrom\",\n            \n        }).then((res) => {\n            return res.data; \n\n        });\n    }\n    function accept_event_Invitation(curr_user){\n        let returned1 = get_request_received_from(curr_user);\n        returned1.then(function(result) {\n            console.log(result);\n            const invited_user_event = {\n                username: result,\n                eventname: requestEvent\n            }\n            let returned = checking(invited_user_event);\n            returned.then(function(result) {\n            console.log(result)\n            const user_event = {\n                username: curr_user,\n                eventname: result[0].eventname,\n                date:result[0].date,\n                time:result[0].time\n            }\n\n            console.log(user_event)\n            if((user_event.username != null) && (user_event.eventname != null) &&(user_event.date != null) &&(user_event.time != null)){\n                axios.post('http://localhost:9000/events/add', user_event);\n            }\n         });\n\n         });\n\n        \n        //axios.post('http://localhost:9000/events/add', invited_user_event);\n    \n    }\n    function checking(user){\n        return axios({\n            method: \"POST\",\n            data: user,\n            url : \"http://localhost:9000/events/display_event_object_by_username\",\n            \n        }).then((res) => {\n            return res.data;         \n        });\n    }\n    function update(invitestat){\n        if(invitestat == \"There is no such event existed\"){\n            setinvitestat(\"There is no such event existed\");\n        }\n    \n    }\n    return(\n        <div className='invite'>\n            { logincontrol.isLoggedIn()?\n                <div>\n                    <form>\n                        <label className='message'>Invite friend to join the event</label>\n                        <input\n                            type=\"text\"\n                            value={ inviteUser }\n                            onChange={ (e) => setInviteUser(e.target.value) }\n                            placeholder=\"Enter your friend's username\"\n                        />\n                        <label className='message'>Choose an event(that already existed) to invite</label>\n                        {/* could use map here to do options in created event */}\n                        <input\n                            type=\"text\"\n                            value={ event }\n                            onChange={ (e) => setEvent(e.target.value) }\n                            placeholder=\"Enter event's name\"\n                        />\n                        <button onClick={handleButton}>Invite now</button>\n                    </form>\n                    \n                    <h1>{invitestat} </h1>\n                    <h1>{update(invitestat)} </h1>\n                    <div className='checkrequest'>\n                        {check_if_being_requested(curr_user) && !requestString?\n                            <div className='display'>\n                                <h2 className='message'>You have the following Invitation!</h2>\n                                <form>\n                                    <label className='invitation'>You have been invited to join {requestEvent}</label>\n                                    <button className='buttons' onClick={handleAccept}>Accept</button>\n                                    <button className='rejectbuttons' onClick={handleReject}>Decline</button>\n                                </form>\n                            </div>\n                        :\n                            <div className='display'>\n                                <h2 className='message'>You have no invation! Check back later!</h2>\n                            </div>\n                        }\n                    </div>\n                </div>\n            :\n                <div className='notloggedin'>\n                    <h2 className=\"message\">Please login first</h2>\n                </div>\n            }\n        </div>\n    );\n}\n\n\n/*****************************************************\n * Create some kind of searchbox such that when the user creates an event, and they clicked on the button \"Invite user to event\"\n * Next, when they typed the user they wanted to invite, and they clicked \"ok\", call the following function:\n*NEED TO grab the following from the front end and pass it into the following function:\n1. the user that the current user is trying to invite \"user_to_invite\"\n2. The current user that is doing the operation: \"username\"\n3. The event that the user is trying to add with another user \"event\"\n*****************************************************/\nfunction invite_user(user_to_invite,username,event){\n    const invite_information = {\n        username: username,\n        user_to_invite:user_to_invite,\n        event: event,\n    }\n\n    try{\n        axios.post('http://localhost:9000/users/search_user_to_invite/', invite_information);\n        //display something like: request sent to user_to_invite successfully\n    } catch(err) {\n        //Cannot find the user in the database, display some errors in the front end (not in the console).\n        console.log(\"error\")\n    }\n\n}\n\n\nasync function check(current_user){\n    console.log(current_user)\n    return axios({\n        method: \"POST\",\n        data: {\n            username:current_user\n        },\n        url : \"http://localhost:9000/events/display_event\",\n        \n    }).then((res) => {\n        return res.data;         \n    });\n  \n    \n}\n\n/*****************************************************\n Make a button in the home page called \"check event invitation\", when clicked, will invoke the following \n function, which checks if the current user is requsted by anyone to join an event.\n If Yes, Display the event, requester and two options: Accept or deny\n    If user onclick \"Accept\", call the function \"accept_event_Invitation\"\n    If the user onclick \"deny\" call the function \"deny_event_Invitation\"\n If No, Display \"No invitation\" to the user\n\n*****************************************************/\nfunction check_request(usr){\n    console.log(usr)\n    return axios({\n        method: \"POST\",\n        data: usr,\n        url: \"http://localhost:9000/users/check_if_being_requested\",\n      }).then((res) => {\n          return res.data;         \n      });\n    \n\n\n}\n\n\n\n\nfunction deny_event_Invitation(username){\n    const user = {\n        username: username,\n    }\n    axios.post('http://localhost:9000/users/deny_event_Invitation', user);\n\n\n}\n\nexport default Invite;\n\n","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/SignUp.js",["66"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../index.css';\nimport logincontrol from '../LoginControl';\nimport { useHistory } from 'react-router-dom';\n// import axios from 'axios';\n\n\n\n\n\nconst SignUp = () => {\n    useEffect(() => {\n        document.title = 'Sign Up';\n    });\n    \n    const [username, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [signUpStatus, setSignUpStatus] = useState('');\n    const user = {\n        username: username,\n        password: password,\n    }\n\n \n    function read(user){\n        let returned = logincontrol.RegisterUser(user);\n        returned.then(function(result) {\n            setSignUpStatus(result);\n         });\n\n    }\n    const history = useHistory();\n\n    const handleButton = (e) => {\n        read(user);\n        e.preventDefault();\n        // history.push('/');\n    }\n\n    return(\n        \n        <div className=\"signup\">\n            <div className=\"userform\">\n            <h2 className=\"pagename\">Create account</h2>\n            <form>\n                {/* <label>Username:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ username }\n                    onChange={ (e) => setName(e.target.value) }\n                    placeholder=\"Create Username\"\n                />\n                {/* <label>Password:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }\n                    placeholder=\"Create Password\"\n                />\n                <button onClick={handleButton}> Sign up </button>\n                <h1>{signUpStatus} </h1>\n                \n            </form>\n            </div>\n            <div className=\"accountaction\">\n                <label className=\"accountmessage\">Already have an account?</label>\n                <div className=\"accountlinks\">\n                    <Link to=\"/login\" className=\"link\">Log in</Link>\n\n                </div>\n            </div>\n        </div>\n    );\n    \n}\n\n\nexport default SignUp;","/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/directories/SearchBar.js",["67","68"],"/Users/hersh/Desktop/UCLA/Quarters/Spring '21/COM SCI 35L/Final_Project_v2/cs35l_project/client/src/LoginControl.js",["69","70","71"],"import Axios from \"axios\";\nimport signup from './directories/SignUp.js';\nclass LoginControl {\n    \n    constructor() {\n        this.LoggedIn = false;\n        this.username = ' ';\n        \n    }\n    setUsername(name){\n        this.username = name;\n    }\n    \n    getUsername() {\n        return this.username;\n    }\n\n    login() {\n        this.LoggedIn = true;\n    }\n\n    logout() {\n        new LoginControl;\n    }\n\n    isLoggedIn() {\n        return (this.LoggedIn);\n    }\n    \n    //put the newly register user password and username into the database.\n    //maybe need to display a page that notify that user the account creation is a success/failure. And redirect them to the calender.\n    RegisterUser(user) {\n       return Axios({\n            method: \"POST\",\n            data: user,\n            withCredentials: true,\n            url: \"http://localhost:9000/users/register\",\n          }).then((res) => {\n              console.log(res.data.message)\n              return res.data.message;         \n          });\n    }\n\n    /***********************************************\n     * CHECK IF A LOGIN IS REGISTERED\n     ***********************************************/\n    \n    \n \n    \n  \n    \n\n\n\n}\nexport default new LoginControl;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"80","line":5,"column":21,"nodeType":"78","messageId":"79","endLine":5,"endColumn":34},{"ruleId":"81","severity":1,"message":"82","line":17,"column":15,"nodeType":"83","endLine":20,"endColumn":6},{"ruleId":"81","severity":1,"message":"84","line":20,"column":7,"nodeType":"85","endLine":20,"endColumn":9,"suggestions":"86"},{"ruleId":"76","severity":1,"message":"87","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"88","line":26,"column":11,"nodeType":"78","messageId":"79","endLine":26,"endColumn":18},{"ruleId":"76","severity":1,"message":"89","line":44,"column":13,"nodeType":"78","messageId":"79","endLine":44,"endColumn":15},{"ruleId":"76","severity":1,"message":"90","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":19},{"ruleId":"76","severity":1,"message":"91","line":19,"column":12,"nodeType":"78","messageId":"79","endLine":19,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":81,"column":36,"nodeType":"94","messageId":"95","endLine":81,"endColumn":38},{"ruleId":"76","severity":1,"message":"96","line":111,"column":14,"nodeType":"78","messageId":"79","endLine":111,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":112,"column":23,"nodeType":"94","messageId":"95","endLine":112,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":1,"column":38,"nodeType":"78","messageId":"79","endLine":1,"endColumn":46},{"ruleId":"76","severity":1,"message":"88","line":21,"column":11,"nodeType":"78","messageId":"79","endLine":21,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":44,"column":22,"nodeType":"94","messageId":"95","endLine":44,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":140,"column":23,"nodeType":"94","messageId":"95","endLine":140,"endColumn":25},{"ruleId":"76","severity":1,"message":"88","line":33,"column":11,"nodeType":"78","messageId":"79","endLine":33,"endColumn":18},{"ruleId":"76","severity":1,"message":"97","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":59,"column":39,"nodeType":"83","messageId":"100","endLine":59,"endColumn":41},{"ruleId":"76","severity":1,"message":"101","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":23,"column":9,"nodeType":"104","messageId":"105","endLine":23,"endColumn":25,"fix":"106"},{"ruleId":"102","severity":1,"message":"103","line":57,"column":16,"nodeType":"104","messageId":"105","endLine":57,"endColumn":32,"fix":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'displayEvents' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'event' and 'hpEvents'. Either include them or remove the dependency array.","ArrayExpression",["110"],"'setState' is defined but never used.","'history' is assigned a value but never used.","'ok' is defined but never used.","'Component' is defined but never used.","'displayConflict' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'update' is defined but never used.","'logincontrol' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'signup' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"111","text":"112"},{"range":"113","text":"112"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},[405,405],"()",[1225,1225],"Update the dependencies array to be: [event, hpEvents]",{"range":"116","text":"117"},[735,737],"[event, hpEvents]"]