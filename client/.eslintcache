[{"/mnt/c/Users/ksjjj/cs35l_project/client/src/index.js":"1","/mnt/c/Users/ksjjj/cs35l_project/client/src/App.js":"2","/mnt/c/Users/ksjjj/cs35l_project/client/src/NavBar.js":"3","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/Invite.js":"4","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/Home.js":"5","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/SignUp.js":"6","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/LogIn.js":"7","/mnt/c/Users/ksjjj/cs35l_project/client/src/LoginControl.js":"8","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/SearchBar.js":"9"},{"size":485,"mtime":1622771612191,"results":"10","hashOfConfig":"11"},{"size":1421,"mtime":1622874096034,"results":"12","hashOfConfig":"11"},{"size":3325,"mtime":1622810013580,"results":"13","hashOfConfig":"11"},{"size":9146,"mtime":1622876607501,"results":"14","hashOfConfig":"11"},{"size":6859,"mtime":1622874038317,"results":"15","hashOfConfig":"11"},{"size":2192,"mtime":1622640640972,"results":"16","hashOfConfig":"11"},{"size":4015,"mtime":1622874364966,"results":"17","hashOfConfig":"11"},{"size":1261,"mtime":1622810013578,"results":"18","hashOfConfig":"11"},{"size":3051,"mtime":1622806307856,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19odfjt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/mnt/c/Users/ksjjj/cs35l_project/client/src/index.js",[],["45","46"],"/mnt/c/Users/ksjjj/cs35l_project/client/src/App.js",[],"/mnt/c/Users/ksjjj/cs35l_project/client/src/NavBar.js",["47","48","49","50"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport logincontrol from \"./LoginControl\";\nimport {loadEvents, displayEvents } from \"./directories/SearchBar\"\n// import ReactCircleModal from 'react-circle-modal'\nimport Modal from 'react-modal'\nconst NavBar = () => {\n    //let eventList;\n    const [filteredEvents, setFilteredEvents] = useState([]);\n    const[modalIsOpen,setModalIsOpen] = useState(false)\n    let hpEvents=[];\n    const event = {\n    username: logincontrol.getUsername(), //logincontrol.getUsername(), //grab the user name from the front end (where is the username stored in the front end?)\n    eventname: \"\" \n}\n    // logincontrol.login();\n\n    useEffect(async() => {\n        //let eventList = document.getElementById('eventList');\n        await loadEvents(event, hpEvents);\n    },[])\n   \n    const handleChange = async(e) => {\n        hpEvents=[];\n        await loadEvents(event, hpEvents);\n        const searchString = e.target.value.toLowerCase();\n        if(searchString){\n        console.log(searchString);\n        const filteredEvents = hpEvents.filter( Event => {\n            return(\n                Event.eventname.toLowerCase().includes(searchString) || \n                Event.sdate.includes(searchString)\n            );\n        });\n        setFilteredEvents(filteredEvents)\n        //displayEvents(filteredEvents, eventList);\n        }\n        else{\n            setFilteredEvents([])\n        }\n    }\n\n    return(\n        <nav className=\"navbar\">\n            <Link to=\"/\" className=\"icon\">Event Scheduler App</Link>       \n            <div className=\"navlinks\">\n                {logincontrol.isLoggedIn() ? \n                    <Link to=\"/\" className=\"link\" onClick={logincontrol.logout}>Log out</Link>\n                    :\n                    <Link to=\"/login\" className=\"link\">Log in</Link>\n                }\n                {/* <Link to=\"/login\" className=\"link\">Log in</Link> */}\n                {/* <Link to=\"/create\" className=\"link\">Create events</Link> */}\n                <Link to=\"/invite\" className=\"link\">Invite friends</Link>\n            </div>\n            <div id=\"searchWrapper\">\n                <input\n                    type=\"text\"\n                    name=\"searchBar\"\n                    id=\"searchBar\"\n                    placeholder=\"search for an event\"\n                    onChange={(e) => handleChange(e)}\n                />\n            </div>\n            <button className=\"navbutton\" onClick={() => setModalIsOpen(true)}>Search</button>\n            <Modal isOpen = {modalIsOpen} onRequestClose={()=>setModalIsOpen(false)}>\n                <h2 className=\"match\">Matched events</h2>\n                <p> <ul id=\"eventList\">\n                {filteredEvents.map((event) =>(\n                            <div className=\"event-preview\" key={event.id}>\n                                <h2>{ event.eventname }</h2>\n                                <p>date: { event.sdate }</p>\n                                <p>Time: { event.stime }</p>\n\n                            </div>\n                        ))}\n            </ul></p>\n                <button className=\"navbutton\" onClick={()=>setModalIsOpen(false)}>Closed</button>\n\n            </Modal>\n            \n        </nav>\n    );\n} \n\nexport default NavBar;\n","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/Invite.js",["51","52","53","54"],"/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/Home.js",["55","56","57","58","59","60"],"import Axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport { Component } from 'react';\n//import { update } from '../../../server/datamodel/user';\nimport '../index.css';\nimport logincontrol from \"../LoginControl\";\nimport login from \"./LogIn.js\";\n\nconst Home = () => {\n    useEffect(() => {\n        document.title = 'Home';\n    });\n    //logincontrol.login();\n\n    const [events, setEvents] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [userEvent, setUserEvent] = useState([]); //get user's event from backend\n    const [isConflict,update_isConflict] = useState('');\n    const [displayConflict,update_displayConflict] = useState('');\n    //HOPEFULLY get sth like this below\n    // const [userEvent, setUserEvent] = useState([\n    //     {title: 'Git repository organization due', date:'May 31', discription:'Git repository organization due', id: 1},\n    //     {title: 'Project source code due', date:'June 2', discription:'Project source code due', id: 2},\n    //     {title: 'Project Final Report due', date:'June 4', discription:'Project Final Report due', id: 3},\n    //     {title: 'End-of-quarter LA feedback survey due', date:'June 4', discription:'End-of-quarter LA feedback survey due', id: 4}\n\n    // ]);\n    // logincontrol.login();\n    const handleSubmit = (e) => {\n        //backend function\n        //check conflict:\n        //Date format is YYYY-MM-DD\n        //Time format is HH:MM\n        console.log(time)\n        console.log(date)\n        const event_object = {\n            username: logincontrol.username,\n            eventname: events,\n            sdate:date,\n            stime:time\n        }\n        read_conflict(event_object);\n        e.preventDefault();\n        \n\n    }\n    const handleB = (e) => {\n        //backend function\n        //check conflict:\n        //Date format is YYYY-MM-DD\n        //Time format is HH:MM\n        display_events()\n    }\n    \n    function display_events(){\n        return Axios({\n            method: \"POST\",\n            data: {\n                username:logincontrol.username\n            },\n            url : \"http://localhost:9000/events/display_event_object\",\n            \n        }).then((res) => {\n            console.log(res.data)\n            setUserEvent(res.data)\n            return res.data;         \n        });\n    }\n    function conflict_check(event_object){\n        return Axios({\n            method: \"POST\",\n            data: event_object,\n            withCredentials: true,\n            url: \"http://localhost:9000/events/checkconflict\",\n          });\n\n    }\n    function read_conflict(event_object){\n        let returned = conflict_check(event_object);\n        returned.then(function(result) {\n            console.log(result.data.message)\n            if(result.data.message.substring(0,17) == \"Conflict detected\"){\n                update_isConflict(result.data.message)\n            }else{\n                update_isConflict(\" \")\n                add_event2();\n            }\n         });\n    }\n    function add_event2(event_object){\n        let returned = add_event(event_object);\n        returned.then(function(result) {\n            console.log(\"Your event has been added to the scheduler!\")\n            update_isConflict(\"Your event has been added to the scheduler!\")\n         });\n    }\n    function add_event(){\n        const event_object = {\n            username: logincontrol.username,\n            eventname: events,\n            date:date,\n            time:time\n        }\n        return Axios({\n            method: \"POST\",\n            data: event_object,\n            withCredentials: true,\n            url: \"http://localhost:9000/events/add\",\n          });\n\n    }\n    function update(isConflict){\n        if(isConflict == \"Conflict detected. Please change your event date/time\"){\n            update_displayConflict(\"Time Conflict detected. Please change your event date/time\");\n        }\n\n    }\n    return(\n        // <div className=\"home\">\n        //     <h2 className=\"home-message\">{message}</h2>\n        //     {/* <h2 className=\"home-message\">and here are some upcoming events</h2> */}\n        //     {events.map((event) =>(\n        //         <div className=\"event-preview\" key={event.id}>\n        //             <h2>{ event.title }</h2>\n        //             <p>date: { event.date }</p>\n        //         </div>\n        //     ))}\n        // </div>\n        <div className=\"home\">\n            \n            {logincontrol.isLoggedIn()?\n                <div>\n                    <div className=\"message\">\n                        <h2>Welcome {logincontrol.getUsername()}</h2>\n                    </div>\n                    <div className=\"create\">\n                    <form>\n                        <label>Create Event</label>\n                        <input \n                            type=\"text\"\n                            value = {events}\n                            onChange={ (e) => setEvents(e.target.value)}\n                            placeholder=\"Enter new event\" \n                        />\n                        <label>Date</label>\n                        <input\n                            type=\"date\"\n                            value={date}\n                            onChange={(e) => setDate(e.target.value)}\n                        />\n                        <label>Time</label>\n                        <input\n                            type=\"time\"\n                            value={time}\n                            onChange={(e) => setTime(e.target.value)}\n                        />\n                        <button onClick={handleSubmit}>Add Event</button>\n                        {/*<h1>{ update(isConflict) }</h1>*/}\n                        <h1>{ isConflict }</h1>\n                    </form>\n                    </div>\n                    <button className=\"show-button\" onClick={handleB}>Reload events</button>\n                    {userEvent.length === 0?\n                        <div className=\"message\">\n                            <h2>You have no upcoming events. Please check again later.</h2>\n                        </div>\n                    :\n                        <div className=\"display\">\n                        {userEvent.map((event) =>(\n                            <div className=\"event-preview\" key={event.id}>\n                                <h2>{ event.eventname }</h2>\n                                <p>date: { event.date }</p>\n                                <p>Time: { event.time }</p>\n                                \n                            </div>\n                        ))}\n                        </div>\n                    }\n                </div>\n            :\n                <div className=\"message\">\n                    <h2>Please login first</h2>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Home;\n","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/SignUp.js",["61"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../index.css';\nimport logincontrol from '../LoginControl';\nimport { useHistory } from 'react-router-dom';\n// import axios from 'axios';\n\n\n\n\n\nconst SignUp = () => {\n    useEffect(() => {\n        document.title = 'Sign Up';\n    });\n    \n    const [username, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [signUpStatus, setSignUpStatus] = useState('');\n    const user = {\n        username: username,\n        password: password,\n    }\n\n \n    function read(user){\n        let returned = logincontrol.RegisterUser(user);\n        returned.then(function(result) {\n            setSignUpStatus(result);\n         });\n\n    }\n    const history = useHistory();\n\n    const handleButton = (e) => {\n        read(user);\n        e.preventDefault();\n        // history.push('/');\n    }\n\n    return(\n        \n        <div className=\"signup\">\n            <div className=\"userform\">\n            <h2 className=\"pagename\">Create account</h2>\n            <form>\n                {/* <label>Username:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ username }\n                    onChange={ (e) => setName(e.target.value) }\n                    placeholder=\"Create Username\"\n                />\n                {/* <label>Password:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }\n                    placeholder=\"Create Password\"\n                />\n                <button onClick={handleButton}> Sign up </button>\n                <h1>{signUpStatus} </h1>\n                \n            </form>\n            </div>\n            <div className=\"accountaction\">\n                <label className=\"accountmessage\">Already have an account?</label>\n                <div className=\"accountlinks\">\n                    <Link to=\"/login\" className=\"link\">Log in</Link>\n\n                </div>\n            </div>\n        </div>\n    );\n    \n}\n\n\nexport default SignUp;","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/LogIn.js",["62","63"],"import React, {setState, useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport '../index.css';\nimport logincontrol from \"../LoginControl\";\nimport Axios from \"axios\";\nimport '../App.js'\nconst Login = () => {\n    useEffect(() => {\n        document.title = 'Log In';\n    });\n    const [data, setData] = useState(null);\n    const [username, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [logInStatus, setlogInStatus] = useState('');\n    \n    // const [isLoggedIn, setLoggedIn] = useState(false);\n    const user = [password,username]\n    \n    function read(user){\n        let returned = checkRegister(user);\n        returned.then(function(result) {\n            setlogInStatus(result.data.message);\n         });\n    }\n\n    const history = useHistory();\n\n    const getUser = () => {\n        Axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:9000/users/user\",\n        }).then((res) => {\n            setData(res.data);\n        });\n      };\n      \n     function checkRegister(user) {\n        const user_object = {\n            username: user[1],\n            password: user[0]\n        }\n        console.log(user_object)\n        var ok;\n            return Axios({\n                method: \"POST\",\n                data: user_object,\n                withCredentials: true,\n                url: \"http://localhost:9000/users/login\",\n              }); //.then((res) => {\n               // //this.username = res.username;\n              //  return res.data.message;\n              //});\n    }\n\n    const handleButton = (e) => {\n        read(user);\n        getUser()\n        e.preventDefault();\n        \n        console.log(logInStatus + \"ok\")\n        update();\n        //logincontrol.username = data.username; //set login control username\n        //history.push('/');\n     }\n     const to_home = (e) => {\n        logincontrol.username = username\n        history.push('/');\n     }\n\n     function update(logInStatus){\n         console.log(\"called update\")\n         if(logInStatus === \"Successfully Authenticated\"){\n            console.log(data.username)\n            logincontrol.username = data.username;\n            console.log(logincontrol.username)\n            logincontrol.login();\n            // history.push('/');\n         }\n     }\n     const click_twice = (e)=> {\n        handleButton(e);\n        //handleButton(e);\n     }\n    return(\n        \n        <div className=\"login\">\n             {/* <div>\n        <h1>Get User after logged in</h1>\n        <button onClick={getUser}>Submit</button>\n        {data ? <h1>Welcome Back {data.username}</h1> : null}\n      </div> */}\n            <div className=\"userform\">\n            <h2 className=\"pagename\">Log in</h2>\n            <form>\n                {/* <label>Username:</label> */}\n                <input\n                    type=\"text\"\n                    required\n                    value={ username }\n                    onChange={ (e) => setName(e.target.value) }\n                    placeholder=\"Username\"\n                />\n                {/* <label>Password:</label> */}\n                <input\n                    type=\"password\"\n                    required\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }\n                    placeholder=\"Password\"\n                />\n                <button onClick={click_twice}>Log In</button>\n                <h1>{logInStatus}</h1>\n                <h1>{update(logInStatus)} </h1>\n                <button onClick={to_home}>Go to Home Page</button>\n            </form>\n            </div>\n            <div className=\"accountaction\">\n                <label className=\"accountmessage\">Don't have an account?</label>\n                <div className=\"accountlinks\">\n                    <Link to=\"/signup\" className=\"link\">Sign up</Link>\n                </div>\n                \n            </div>\n           \n        </div>\n    );\n}\nexport default Login;\n","/mnt/c/Users/ksjjj/cs35l_project/client/src/LoginControl.js",["64","65","66"],"import Axios from \"axios\";\nimport signup from './directories/SignUp.js';\nclass LoginControl {\n    \n    constructor() {\n        this.LoggedIn = false;\n        this.username = ' ';\n        \n    }\n    setUsername(name){\n        this.username = name;\n    }\n    \n    getUsername() {\n        return this.username;\n    }\n\n    login() {\n        this.LoggedIn = true;\n    }\n\n    logout() {\n        window.location.reload();\n        new LoginControl;\n    }\n\n    isLoggedIn() {\n        return (this.LoggedIn);\n    }\n    \n    //put the newly register user password and username into the database.\n    //maybe need to display a page that notify that user the account creation is a success/failure. And redirect them to the calender.\n    RegisterUser(user) {\n       return Axios({\n            method: \"POST\",\n            data: user,\n            withCredentials: true,\n            url: \"http://localhost:9000/users/register\",\n          }).then((res) => {\n              console.log(res.data.message)\n              return res.data.message;         \n          });\n    }\n\n    /***********************************************\n     * CHECK IF A LOGIN IS REGISTERED\n     ***********************************************/\n    \n    \n \n    \n  \n    \n\n\n\n}\nexport default new LoginControl;\n","/mnt/c/Users/ksjjj/cs35l_project/client/src/directories/SearchBar.js",["67","68"],"import axios from 'axios';\nimport logincontrol from '../LoginControl'\n\n//const eventList = document.getElementById('eventList');\n// const searchBar = document.getElementById('searchBar');\n// let hpEvents =[];\n// //console.log(searchBar);\n// const event = {\n//     username: \"hersh\", //logincontrol.getUsername(), //grab the user name from the front end (where is the username stored in the front end?)\n//     eventname: \"\", \n// }\n//get the event name from the database\n\n// export function getEvents(){\n//     try {\n//         //successfully grab event\n//         //returned_event = axios.get('http://localhost:9000/events/search', event);\n//       }\n//       catch(err) {\n//         //display mesage in front end that no event exists for the user\n//       }\n\n// }\n// export function searchBarFunc(){\n//     searchBar.addEventListener('keyup', e => {\n//     const searchString = e.target.value.toLowerCase();\n//     console.log(searchString);\n\n//     const filteredEvents = hpEvents.filter( Event => {\n//         return(\n//             Event.name.toLowerCase().includes(searchString) || \n//             Event.date.includes(searchString)\n//         );\n//     });\n//     displayEvents(filteredEvents);\n//     });\n// }\n\nexport const loadEvents = async(event, hpEvents) => {\n    try {\n        // const res = await fetch('http://localhost:9000/events/search',{\n        //     method:\"POST\",\n        //     data: JSON.stringify({\n        //         username: \"hersh\", //logincontrol.getUsername(), //grab the user name from the front end (where is the username stored in the front end?)\n        //         eventname: \"loll\", \n        //     })\n        // }) //add address of eventlist in ''\n        \n        await axios.post('http://localhost:9000/events/search', {\n            username: event.username, //logincontrol.getUsername(), //grab the user name from the front end (where is the username stored in the front end?)\n            eventname: event.eventname, \n          })\n          .then(function (response) {\n            //   var i;\n            //   for( i = 0; i < response.data.length; i++){\n            //     hpEvents.push(response.data[i]);\n            //   }\n            console.log(response)\n            response?.data.map((data) => {\n                hpEvents.push(data);\n            })\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n          console.log(hpEvents)\n          \n          //displayEvents(hpEvents, eventList);\n    }catch (err){\n        console.error(err);\n    }\n};\n\nexport const displayEvents = (events, eventList) => {\n    console.log(events)\n    console.log(events[0])\n    const htmlString = events //Just assume the eventlist is on htmlpage\n        .map((Event) => {\n            console.log(Event)\n            return `\n            <li class=\"Event\">\n                <h2>${Event.eventname}</h2>\n                <p>Date: ${Event.sdate}</p>\n            </li>\n        `;\n        })\n        .join('');\n    eventList.innerHTML = htmlString;\n    console.log(eventList)\n};\n\nloadEvents();",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":5,"column":21,"nodeType":"75","messageId":"76","endLine":5,"endColumn":34},{"ruleId":"78","severity":1,"message":"79","line":19,"column":15,"nodeType":"80","endLine":22,"endColumn":6},{"ruleId":"78","severity":1,"message":"81","line":22,"column":7,"nodeType":"82","endLine":22,"endColumn":9,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":46},{"ruleId":"73","severity":1,"message":"84","line":21,"column":11,"nodeType":"75","messageId":"76","endLine":21,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":139,"column":18,"nodeType":"87","messageId":"88","endLine":139,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":142,"column":24,"nodeType":"87","messageId":"88","endLine":142,"endColumn":26},{"ruleId":"73","severity":1,"message":"89","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":19},{"ruleId":"73","severity":1,"message":"90","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":13},{"ruleId":"73","severity":1,"message":"91","line":20,"column":12,"nodeType":"75","messageId":"76","endLine":20,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":83,"column":52,"nodeType":"87","messageId":"88","endLine":83,"endColumn":54},{"ruleId":"73","severity":1,"message":"92","line":113,"column":14,"nodeType":"75","messageId":"76","endLine":113,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":114,"column":23,"nodeType":"87","messageId":"88","endLine":114,"endColumn":25},{"ruleId":"73","severity":1,"message":"84","line":33,"column":11,"nodeType":"75","messageId":"76","endLine":33,"endColumn":18},{"ruleId":"73","severity":1,"message":"93","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"73","severity":1,"message":"94","line":44,"column":13,"nodeType":"75","messageId":"76","endLine":44,"endColumn":15},{"ruleId":"73","severity":1,"message":"95","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":24,"column":9,"nodeType":"98","messageId":"99","endLine":24,"endColumn":25,"fix":"100"},{"ruleId":"96","severity":1,"message":"97","line":58,"column":16,"nodeType":"98","messageId":"99","endLine":58,"endColumn":32,"fix":"101"},{"ruleId":"73","severity":1,"message":"102","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":59,"column":39,"nodeType":"80","messageId":"105","endLine":59,"endColumn":41},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'displayEvents' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'event' and 'hpEvents'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'login' is defined but never used.","'displayConflict' is assigned a value but never used.","'update' is defined but never used.","'setState' is defined but never used.","'ok' is defined but never used.","'signup' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"109","text":"110"},{"range":"111","text":"110"},"'logincontrol' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},[439,439],"()",[1259,1259],"Update the dependencies array to be: [event, hpEvents]",{"range":"114","text":"115"},[875,877],"[event, hpEvents]"]